name: Deploy To ECS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: hanyahua/emsp:latest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: '3.9.6'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

      - name: Prepare files for upload
        run: |
          echo "Looking for packaged JAR..."
          JAR_FILE=$(ls target/*.jar | grep -v '.jar.original')
          if [ -z "$JAR_FILE" ]; then
          echo "‚ùå No executable JAR found!"
          exit 1
          fi
          echo "‚úÖ Found: $JAR_FILE"
          cp "$JAR_FILE" emsp.jar
          echo "üì¶ Listing emsp.jar:"
          ls -lh emsp.jar

      - name: Build Docker image
        run: docker build -t emsp:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker tag emsp:latest $IMAGE_NAME && docker push $IMAGE_NAME

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: |
          terraform apply -auto-approve \
                      -var="docker_image=${{ env.IMAGE_NAME }}" \
                      -var="db_username=${{ secrets.DB_USERNAME }}" \
                      -var="db_password=${{ secrets.DB_PASSWORD }}" \
                      -var="key_name=${{ secrets.EC2_KEY_NAME }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
