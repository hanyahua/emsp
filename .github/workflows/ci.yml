name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: '3.9.6'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Prepare files for upload
        run: |
          echo "Looking for packaged JAR..."
          JAR_FILE=$(ls target/*.jar | grep -v '.jar.original')
          if [ -z "$JAR_FILE" ]; then
          echo "❌ No executable JAR found!"
          exit 1
          fi
          echo "✅ Found: $JAR_FILE"
          cp "$JAR_FILE" emsp.jar
          echo "📦 Listing emsp.jar:"
          ls -lh emsp.jar

      - name: Generate .env file
        run: |
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" > .env
          echo "DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - name: Confirm files exist before SCP
        run: ls -lh emsp.jar Dockerfile docker-compose.yml .env

      - name: Upload jar and Dockerfile to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./emsp.jar,./Dockerfile,./docker-compose.yml,./.env,init-ubuntu.sh"
          target: "~/emsp"

      - name: Install Docker and Docker Compose on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/emsp
            chmod +x init-ubuntu.sh
            ./init-ubuntu.sh

      - name: Build and run Docker container on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/emsp
            docker-compose down
            docker-compose up --build -d
